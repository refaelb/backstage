apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: demo
  description: The place to be, for great artists
  labels:
    example.com/custom: custom_label_value
  annotations:
    example.com/service-discovery: artistweb
    circleci.com/project-slug: github/example-org/artist-website
  tags:
    - java
  links:
    - url: https://admin.example-org.com
      title: Admin Dashboard
      icon: dashboard
      type: admin-dashboard
spec:
  type: website
  lifecycle: production
  owner: artist-relations-team
  system: public-websites

---
apiVersion: leumi.io/v1alpha1
kind: Environment
metadata:
  name: test1
  state: active
  environment_name: Production Environment
  owner_email: amir.r@quali.com
  blueprint:
    name: Webgame on S3 (TF)
    repository_name: ProductionBPs
    commit: 6723c086a9f4e43b3745364348fd78d14091b88d
  inputs:
    Name: webapp-bucket
    Name Prefix: torque-demo
    AWS Region: us-west-1
grains:
  S3-Webapp:
    kind: blueprint
    spec:
      source:
        commit: f91427017aa816dbf5d267076d8c56e7da84a38a
      inputs: {}
  KMS-Key:
    kind: blueprint
    spec:
      source:
        commit: f91427017aa816dbf5d267076d8c56e7da84a38a
      inputs:
        name: '"nameqfffw555e"'
        sha256: '"sha256qggggttt666"'
        target: '"targetqhyyyyyyhhh777"'
  lambda:
    kind: blueprint
    spec:
      source:
        commit: f91427017aa816dbf5d267076d8c56e7da84a38a33333
      inputs:
        lambdas:
          - 1
          - 2
          - 3
          - lambdaName
          - lambdaName
        config:
          - path: /
            method: GET
            lambda: lambdaName
          - path: /
            method: GET
            lambda: lambdaName
          - path: rr/
            method: GET
            lambda: lambdaName
          - path: /
            methodyy: GETuu
            lambda: lambdaName
          - path: /
            method: GET
            lambda: lambdaNayyyme
